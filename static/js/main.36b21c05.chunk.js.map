{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/TablePeople/TablePeople.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","classNames","sex","to","slug","name","TablePeople","useState","getpeople","setGetPeople","error","setError","isLoading","setIsLoading","useParams","useEffect","people","length","catch","getParent","parentName","find","map","classnames","born","died","motherName","fatherName","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.36b21c05.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      to={`/people/${person.slug}`}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PersonLink } from '../PersonLink';\n\nexport const TablePeople: React.FC = () => {\n  const [getpeople, setGetPeople] = useState<Person[]>([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(people => {\n        if (!people.length) {\n          setError('There are no people on the server');\n        }\n\n        setGetPeople(people);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setError('Something went wrong');\n        setIsLoading(false);\n      });\n  }, []);\n\n  const getParent = (name: string | null) => {\n    if (!name) {\n      return '-';\n    }\n\n    const parentName = getpeople.find(person => person.name === name);\n\n    if (parentName) {\n      return <PersonLink person={parentName} />;\n    }\n\n    return name;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n          {!!error && (\n            <>\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {error}\n              </p>\n              {getpeople.length <= 0 && (\n                <p data-cy=\"noPeopleMessage\">\n                  {error}\n                </p>\n              )}\n            </>\n          )}\n          {getpeople.length > 0 && !isLoading && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n              <tbody>\n                {getpeople.map((person) => (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={classnames({\n                      'has-background-warning': person.slug === slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>{getParent(person.motherName)}</td>\n                    <td>{getParent(person.fatherName)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport classnames from 'classnames';\nimport { TablePeople } from './components/TablePeople';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classnames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"people\"\n              className={({ isActive }) => classnames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"people\"\n            >\n              <Route index element={<TablePeople />} />\n              <Route path=\":slug\" element={<TablePeople />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}